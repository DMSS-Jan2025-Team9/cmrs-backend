# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:

  push:
    branches: [ main, feature/github-actions ]
  pull_request:
    branches: [ main, feature/github-actions  ]

jobs:
  build:
    strategy:
      matrix:
        service: 
          # - coursemanagement
          - courserecommendation
          # - courseregistration
          # - notificationservice
          # - usermanagement
        include:
          # - service: coursemanagement
          #   db_name: course_db
          - service: courserecommendation
            db_name: recommendation_db
          # - service: courseregistration
          #   db_name: registration_db
          # - service: notificationservice
          #   db_name: notification_db
          # - service: usermanagement
          #   db_name: user_management_db
  
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password123
          MYSQL_DATABASE: ${{ matrix.db_name }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    # Add a short delay to ensure MySQL is fully initialized
    - name: Wait for MySQL to initialize
      run: sleep 10

    - name: Build ${{ matrix.service }}
      working-directory: ./${{ matrix.service }}
      run: mvn -B package --file pom.xml
    
    - name: Run Unit Tests for ${{ matrix.service }}
      working-directory: ./${{ matrix.service }}
      run: mvn test
      env:
        DB_NAME: ${{ matrix.db_name }}
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/${{ matrix.db_name }}
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: password123
        HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.service }}-artifact
        path: ${{ matrix.service }}/target/*.jar
          


