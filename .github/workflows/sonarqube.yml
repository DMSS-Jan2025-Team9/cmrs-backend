name: SonarQube Analysis

on:
  push:
    branches: ["feature/github-actions", "main", "hotfix/securityfindings"]
  pull_request:
    branches: ["feature/github-actions", "main", "hotfix/securityfindings"]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: [self-hosted, cmrs-github-runner-03]
    strategy:
      matrix:
        service:
          - coursemanagement
          - courserecommendation
          - courseregistration
          - notificationservice
          - usermanagement
        include:
          - service: coursemanagement
            db_name: course_db
          - service: courserecommendation
            db_name: recommendation_db
          - service: courseregistration
            db_name: registration_db
          - service: notificationservice
            db_name: notification_db
          - service: usermanagement
            db_name: user_management_db

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
          cache: "maven"

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ matrix.service }}
          restore-keys: ${{ runner.os }}-sonar-${{ matrix.service }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Test SonarQube Connection
        run: |
          echo "Testing connection to SonarQube server via ngrok..."
          curl -v ${{ secrets.SONAR_HOST_URL }} --connect-timeout 10

      - name: Build and Run Tests
        working-directory: ./${{ matrix.service }}
        run: |
          # Run the build and tests first, without SonarQube
          mvn -B clean verify -Dmaven.test.failure.ignore=true

      - name: Run SonarQube Analysis
        working-directory: ./${{ matrix.service }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # Run the SonarQube analysis with detailed test reports
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.projectKey=${{ matrix.service }} \
          -Dsonar.projectName='${{ matrix.service }}' \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.tests=src/test \
          -Dsonar.test.inclusions=**/*Test.java \
          -Dsonar.java.coveragePlugin=jacoco \
          -Dsonar.verbose=true

          
      # Get SonarQube analysis report
      - name: Get SonarQube Analysis Report
        run: |
          SONAR_URL="${{ secrets.SONAR_HOST_URL }}"
          SONAR_TOKEN="${{ secrets.SONAR_TOKEN }}"
          PROJECT_KEY="${{ matrix.service }}"
          curl -u $SONAR_TOKEN: $SONAR_URL/api/issues/search?componentKeys=$PROJECT_KEY > sonar_report_${{ matrix.service }}.json

      # Upload SonarQube report as artifact
      - name: Upload SonarQube report artifact
        uses: actions/upload-artifact@v4
        with:
          name: sonar_report_${{ matrix.service }}.json
          path: sonar_report_${{ matrix.service }}.json
